@page "/products"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using BlazorApp3.Data
@using BlazorApp3.Data
@implements IAsyncDisposable
@inject IDbContextFactory<BlazorApp3.Data.VseRoss2DbContext> DbFactory
@rendermode InteractiveServer

<PageTitle>Остатки ингредиентов и товаров</PageTitle>

<h1>Остатки ингредиентов и товаров</h1>

<input placeholder="Фильтр" @bind="filter" @bind:event="oninput"/>

<select @bind="@Pagination.ItemsPerPage">
    <option>1</option>
    <option>5</option>
    <option>10</option>
    <option>20</option>
</select>



<QuickGrid Class="table" Items="items" Pagination="Pagination">
    <PropertyColumn Property="product => product.Name" title="Название"/>
    <PropertyColumn Property="product => product.Unit.Name" title="Ед.изм." />
    <PropertyColumn Property="product => product.InStac" title="Стационарные" />
    <PropertyColumn Property="product => product.InMob" title="Мобильные" />
    <PropertyColumn Property="product => product.All" title="Итого" />

</QuickGrid>

<Paginator State="Pagination"/>

@code {
    PaginationState Pagination = new PaginationState{ItemsPerPage = 1};
    string filter = "";
    IQueryable<Product> items => context.Products.Where(el => el.Name.Contains(filter)).AsQueryable();
    public VseRoss2DbContext  context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
        context.UnitOfMeasurements.Load();
        context.ProductInStorages.Load();
        context.Storages.Load();
        context.Products.Load();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
